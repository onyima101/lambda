#### START

import boto3
import logging
 
#setup simple logging for INFO
logger = logging.getLogger()
logger.setLevel(logging.INFO)
 
#define the connection
ec2 = boto3.resource('ec2')
 
def lambda_handler(event, context):
 
   # Use the filter() method of the instances collection to retrieve
    # all running EC2 instances.
   filters = [
             {
            'Name': 'tag:weekly-restart',
            'Values': ['true']
        },
        {
            'Name': 'instance-state-name',
            'Values': ['stopped']
        }
    ]
 
    #filter the instances
    #ec2 = boto3.client('ec2', region_name=region)
   instances = ec2.instances.filter(Filters=filters)
 
    #locate all running instances
   StoppedInstances = [instance.id for instance in instances]
 
    #print the instances for logging purposes
   print (StoppedInstances) 
 
    #make sure there are actually instances to shut down.
   if len(StoppedInstances) > 0:
        #perform the startup
        shuttingDown = ec2.instances.filter(InstanceIds=StoppedInstances).start()
        #print startup
   else:
    print ("No instances to start.")






####STOP
import boto3
import logging
 
#setup simple logging for INFO
logger = logging.getLogger()
logger.setLevel(logging.INFO)
 
#define the connection
ec2 = boto3.resource('ec2')
 
def lambda_handler(event, context):
 
   # Use the filter() method of the instances collection to retrieve
    # all running EC2 instances.
   filters = [
             {
            'Name': 'tag:weekly-restart',
            'Values': ['true']
        },
        {
            'Name': 'instance-state-name',
            'Values': ['running']
        }
    ]
 
    #filter the instances
    #ec2 = boto3.client('ec2', region_name=region)
   instances = ec2.instances.filter(Filters=filters)
 
    #locate all running instances
   RunningInstances = [instance.id for instance in instances]
 
    #print the instances for logging purposes
   print (RunningInstances) 
 
    #make sure there are actually instances to shut down.
   if len(RunningInstances) > 0:
        #perform the shutdown
        shuttingDown = ec2.instances.filter(InstanceIds=RunningInstances).stop()
        #print shuttingDown
   else:
    print ("No instances to stop.")
